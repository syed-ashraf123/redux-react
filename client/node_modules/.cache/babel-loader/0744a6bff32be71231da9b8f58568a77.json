{"ast":null,"code":"var _jsxFileName = \"E:\\\\redux-react\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport allReducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst middlewares = [thunk]; //Action\n// const increment = () => {\n//   return {\n//     type: \"INCREMENT\",\n//   };\n// };\n// const decrement = () => {\n//   return {\n//     type: \"DECREMENT\",\n//   };\n// };\n// //Reducer\n// const counter = (state = 0, action) => {\n//   switch (action.type) {\n//     case \"INCREMENT\":\n//       return state + 1;\n//     case \"DECREMENT\":\n//       return state - 1;\n//   }\n// };\n// let store = createStore(counter);\n// //Dispatch\n// store.dispatch(increment());\n\nconst store = createStore(allReducers, composeWithDevTools(applyMiddleware(...middleware)));\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["E:/redux-react/src/index.js"],"names":["React","ReactDOM","App","Provider","reportWebVitals","createStore","applyMiddleware","allReducers","thunk","composeWithDevTools","middlewares","store","middleware","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,WAAW,GAAG,CAACF,KAAD,CAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMG,KAAK,GAAGN,WAAW,CACvBE,WADuB,EAEvBE,mBAAmB,CAACH,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAFI,CAAzB;AAIAX,QAAQ,CAACY,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAX,eAAe","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport allReducers from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst middlewares = [thunk];\r\n\r\n//Action\r\n// const increment = () => {\r\n//   return {\r\n//     type: \"INCREMENT\",\r\n//   };\r\n// };\r\n// const decrement = () => {\r\n//   return {\r\n//     type: \"DECREMENT\",\r\n//   };\r\n// };\r\n\r\n// //Reducer\r\n\r\n// const counter = (state = 0, action) => {\r\n//   switch (action.type) {\r\n//     case \"INCREMENT\":\r\n//       return state + 1;\r\n//     case \"DECREMENT\":\r\n//       return state - 1;\r\n//   }\r\n// };\r\n// let store = createStore(counter);\r\n\r\n// //Dispatch\r\n// store.dispatch(increment());\r\n\r\nconst store = createStore(\r\n  allReducers,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}